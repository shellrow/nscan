[package]
name = "nscan"
version = "1.1.0"
authors = ["shellrow <shellrow@fortnium.com>"]
edition = "2021"
description = "Cross-platform network scan tool for host and service discovery"
repository = "https://github.com/shellrow/nscan"
homepage = "https://github.com/shellrow/nscan"
readme = "README.md"
documentation = "https://github.com/shellrow/nscan"
keywords = ["network","security","scan","cli","cross-platform"]
categories = ["network-programming"]
license = "MIT"

[[bin]]
name = "nscan"

[dependencies]
serde = { version = "1", features = ["derive"] }
serde_json = "1"
netdev = { version = "0.28", features = ["serde"] }
nex = { version = "0.14", features = ["serde"] }
nex-socket = { version = "0.14", features = ["tls"] }
privilege = "0.3"
async-io = "2.3"
futures-lite = "2.3"
futures = {version = "0.3", features = ["executor", "thread-pool"]}
tokio = { version = "1" }
hickory-resolver = { version = "0.24" }
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.3", features = ["v4","v5","fast-rng","macro-diagnostics"] }
bincode = "1.3"
phf = { version = "0.11", features = ["macros"] }
rand = "0.8"
clap = { version = "4.4", features = ["cargo"] }
indicatif = "0.16"
inquire = "0.6"
term-table = "1.3.2"
ipnet = "2.7"

[target.'cfg(windows)'.dependencies]
winreg = "0.50"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.15.1"
# CI backends to support
ci = "github"
# The installers to generate for each app
#installers = ["shell", "homebrew", "powershell"]
installers = ["shell", "homebrew"]
# A GitHub repo to push Homebrew formulas to
tap = "shellrow/homebrew-tap-nscan"
# Target platforms to build apps for (Rust target-triple syntax)
#targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-pc-windows-msvc"]
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu"]
# Publish jobs to run in CI
publish-jobs = ["homebrew"]
# Publish jobs to run in CI
pr-run-mode = "plan"
# Whether to install an updater program
install-updater = false
